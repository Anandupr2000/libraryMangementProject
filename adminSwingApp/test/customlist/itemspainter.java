/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package customlist;

import customlist.*;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Image;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/**
 *
 * @author Ananthu
 */
public class itemspainter extends javax.swing.JPanel implements ListCellRenderer{

    /**
     * Creates new form items
     */
    
    public itemspainter() {
        initComponents();
//        setForeground(Color.BLACK);
        setOpaque(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        image = new javax.swing.JLabel();
        name1 = new javax.swing.JLabel();
        info = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        acceptBtn = new javax.swing.JButton();
        denyBtn = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(10, 5, 10, 5), javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5))));
        setMinimumSize(new java.awt.Dimension(380, 160));
        setPreferredSize(new java.awt.Dimension(380, 160));

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon 1/Icon 1/123456.png"))); // NOI18N
        image.setText("image");

        name1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        name1.setText("name");

        info.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        info.setText("info");

        acceptBtn.setText("Accept");

        denyBtn.setText("Deny");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(name1, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(info, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(acceptBtn)
                        .addGap(18, 18, 18)
                        .addComponent(denyBtn))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(name1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(info, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(acceptBtn)
                        .addComponent(denyBtn)))
                .addGap(7, 7, 7))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptBtn;
    private javax.swing.JButton denyBtn;
    private javax.swing.JLabel image;
    private javax.swing.JLabel info;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel name1;
    // End of variables declaration//GEN-END:variables

    /**
     *
     * @param jlist
     * @param value
     * @param index
     * @param isSelected
     * @param cellHasFocus
     * @return
     */
    @Override
    public Component getListCellRendererComponent(JList jlist, Object value,
            int index, boolean isSelected, boolean cellHasFocus) {
        itemmodel model = (itemmodel) value;
        try {
            //        image.setIcon(model.getIcon());
            Image img = ImageIO.read(new URL("https://firebasestorage.googleapis.com/v0/b/librarymanagementsystem-c8c7b.appspot.com/o/Profile%2FzfKExtFiHjUkqH016ZPg1kwqT8V2?alt=media&token=9e19a549-8a1e-42a0-a027-61521794f1da"));
            image.setIcon(new ImageIcon(img));
            System.out.println("Sucess");
        } catch (MalformedURLException ex) {
            Logger.getLogger(itemspainter.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(itemspainter.class.getName()).log(Level.SEVERE, null, ex);
        }
        name1.setText(model.getName());
        info.setText(model.getInfo());
        
        name1.addMouseListener(new MouseListener() {
            @Override
            public void mouseClicked(MouseEvent me) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//                System.out.println("Name was clicked");
            }

            @Override
            public void mousePressed(MouseEvent me) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseReleased(MouseEvent me) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseEntered(MouseEvent me) {
                 
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void mouseExited(MouseEvent me) {
//                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        if(isSelected){
//            setBackground(Color.LIGHT_GRAY);
setBackground(new Color(217, 219, 218,255));
            setForeground(Color.WHITE);
//            name1.setForeground(Color.WHITE);
//            info.setForeground(Color.WHITE);
//            denyBtn.setForeground(Color.WHITE);
//            acceptBtn.setForeground(Color.WHITE);
        }
        else if(!isSelected){
            setBackground(Color.WHITE);
            setForeground(Color.LIGHT_GRAY);
            name1.setForeground(Color.BLACK);
            info.setForeground(Color.BLACK);
//            denyBtn.setForeground(Color.BLACK);
//            acceptBtn.setForeground(Color.BLACK);
        }else{
//        setBackground(Color.WHITE);
//        setForeground(Color.BLACK);
//        name1.setForeground(Color.BLACK);
//        info.setForeground(Color.BLACK);
//        denyBtn.setForeground(Color.BLACK);
//        acceptBtn.setForeground(Color.BLACK);
        }
        return this;
    }
}
